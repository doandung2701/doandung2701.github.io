{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-detail/contact-detail.component.css","webpack:///./src/app/contact-detail/contact-detail.component.html","webpack:///./src/app/contact-detail/contact-detail.component.ts","webpack:///./src/app/contacts/contact.module.ts","webpack:///./src/app/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/signin/sign-in.service.ts","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/weather/weather.component.css","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/app/weather/weather.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Routes, RouterModule } from \"@angular/router\";\r\nimport {CommonModule  } from \"@angular/common\";\r\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { ContactsModule } from \"./contacts/contact.module\";\r\nconst routesConfig: Routes = [\r\n    { path: 'detail/:id', component: ContactDetailComponent },\r\n    { path: '', redirectTo: '/contacts', pathMatch: 'full' },\r\n    { path: '**', component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [ContactsModule,RouterModule.forRoot(routesConfig),CommonModule],\r\n    declarations:[\r\n        ContactDetailComponent,NotFoundComponent\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\nexport class AppRoutingModule{\r\n\r\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"breadcrumb\\\">\\r\\n    <a class=\\\"breadcrumb-item\\\" [routerLink]=\\\"[ '/contacts']\\\">Contacts</a>\\r\\n    <a class=\\\"breadcrumb-item\\\" [routerLink]=\\\"[ '/detail' ]\\\">Detail</a>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { WeatherService } from './weather/weather.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers:[WeatherService]\n})\nexport class AppComponent {\n  title = 'test-app1';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from \"@angular/http\";\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { SigninComponent } from './signin/signin.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    SigninComponent,\n    SignUpComponent\n  ],\n  imports: [\n    BrowserModule, HttpModule, FormsModule, ReactiveFormsModule,AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  contact-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute) \n  {   }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params:ParamMap)=>{\n      console.log(params.get('id'));\n    });\n  }\n\n}\n","\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport {CommonModule  } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ContactsComponent } from \"./contacts.component\";\r\nconst routesConfig:Routes=[\r\n    {path:'contacts',component:ContactsComponent}\r\n]\r\n\r\n@NgModule({\r\n    imports:[CommonModule,RouterModule.forChild(routesConfig)]\r\n    ,\r\ndeclarations:[ContactsComponent]\r\n})\r\nexport class ContactsModule{\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-sm-12 col-md-6 offset-md-3\\\">\\n    <div class=\\\"card-group\\\" *ngFor=\\\"let contact of contacts\\\">\\n      <div class=\\\"card mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">{{contact.id}}</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"card-text\\\">{{contact.name}}</p>\\n          <p class=\\\"card-text\\\">{{contact.phoneNumber}}</p>\\n          <a routerLink=\\\"/detail/{{contact.id}}\\\" class=\\\"card-link\\\">Go to detail</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  private contacts=[\n    { id: 1, name: 'Teo', phoneNumber: '0123' },\n    { id: 2, name: 'Ti', phoneNumber: '0456' },\n    { id: 3, name: 'Tun', phoneNumber: '0789' },\n];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-3\\\">Sorry</h1>\\n    <p class=\\\"lead\\\">Your request not fond or not authenticated</p>\\n    <hr class=\\\"my-2\\\">\\n    <p>please check your url correctly</p>\\n    <p class=\\\"lead\\\">\\n      <a class=\\\"btn btn-primary btn-lg\\\"  [routerLink]=\\\"[ '/contacts']\\\" role=\\\"button\\\">Contacts</a>\\n    </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row clearfix\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"formSignup\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Enter your email\\\" />\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"formSignup.get('email').touched&&formSignup.get('email').errors?.required\\\">\\n        <strong>Email is required</strong>\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"formSignup.get('email').touched&&formSignup.get('email').errors?.email\\\">\\n        <strong>Email is not corrected</strong>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your password\\\"\\n        />\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"formSignup.get('password').errors?.required&&formSignup.get('password').touched\\\">\\n        <strong>password is required</strong>\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"formSignup.get('password').errors?.minlength&&formSignup.get('password').touched\\\">\\n          <strong>password need more than 3 characters</strong>\\n        </div>\\n      <div formGroupName=\\\"subject\\\">\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input formControlName=\\\"angularJS\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" name=\\\"angular\\\" id=\\\"angular\\\"  >Angular</label>\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input formControlName=\\\"nodeJS\\\"  type=\\\"checkbox\\\" class=\\\"form-check-input\\\" name=\\\"notejs\\\" id=\\\"notejs\\\"  >NoteJS</label>\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input formControlName=\\\"reactJs\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" name=\\\"reactjs\\\" id=\\\"reactjs\\\"  >ReactJS</label>\\n      </div>\\n    </div>\\n      <button [disabled]='formSignup.invalid' class=\\\"btn btn-info\\\" role=\\\"button\\\">Signup</button>\\n    </form>\\n    <br/>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder,Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  formSignup: FormGroup;\n  constructor(private fb: FormBuilder) {\n\n  }\n\n  ngOnInit() {\n    this.formSignup = this.fb.group({\n      email: ['pho1@gmail.com',Validators.compose([Validators.required,Validators.email,Validators.minLength(3)])],\n      password: ['',Validators.compose([Validators.required,Validators.minLength(3)])],\n      subject: this.fb.group({\n        nodeJS: false,\n        angularJS: false,\n        reactJs: true\n      }),\n\n    });\n\n  }\n  onSubmit() {\n    console.log(this.formSignup.value);\n\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class SignInService{\r\n    constructor(private http:Http){\r\n\r\n    }\r\n    sendPostData(value){\r\n        const url=\"http://localhost:3000/signin\";\r\n        const headers=new Headers({'Content-Type':'application/json'});\r\n        const body=JSON.stringify(value);\r\n        return this.http.post(url,body,{ headers }).toPromise()\r\n        .then(res=>res.json());\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <form (ngSubmit)=\\\"onSubmit(formSignIn)\\\" #formSignIn=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n          <input required type=\\\"email\\\" name=\\\"email\\\" ngModel #emailInput=\\\"ngModel\\\" email class=\\\"form-control mb-1\\\" placeholder=\\\"Enter your email\\\"/>\\n\\n        <div *ngIf=\\\"emailInput.touched&&emailInput.errors?.required\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n          <strong>Email is required</strong>\\n        </div>\\n        <div *ngIf=\\\"emailInput.touched&&emailInput.errors?.email\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n          <strong>Email not correct</strong>\\n        </div>\\n        <small id=\\\"helpEmail\\\" class=\\\"form-text text-muted\\\">Email must have @</small>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input required ngModel #passwordInput=\\\"ngModel\\\" minlength=\\\"6\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your password\\\"\\n          aria-describedby=\\\"helpPassword\\\">\\n        <small id=\\\"helpPassword\\\" class=\\\"text-muted\\\">Password need to be corrected</small>\\n      </div>\\n      <div ngModelGroup=\\\"subjects\\\">\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input [ngModel]=\\\"false\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" name=\\\"football\\\" id=\\\"football\\\" value=\\\"checkedValue\\\" checked>Football</label>\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input [ngModel]=\\\"false\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" name=\\\"notejs\\\" id=\\\"notejs\\\" value=\\\"checkedValue\\\" checked>NoteJS</label>\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input [ngModel]=\\\"false\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" name=\\\"reactjs\\\" id=\\\"reactjs\\\" value=\\\"checkedValue\\\" checked>          ReactJS\\n        </label>\\n      </div>\\n    </div>\\n  <button [disabled]=\\\"formSignIn.invalid\\\" name=\\\"submit\\\" id=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\" role=\\\"button\\\">Submit</button>\\n  </form>\\n  <br/>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { SignInService } from './sign-in.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n  providers:[SignInService]\n})\nexport class SigninComponent implements OnInit {\n  private email: string = '';\n  private password: string = '';\n  constructor(private service:SignInService) {\n\n  }\n  onSubmit(formSignIn) {\n   this.service.sendPostData(formSignIn.value).then(ressult=>console.log(ressult)).catch(err=>{\n     console.log(err+\"\");\n   });\n  }\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm12 col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"cityName\\\">{{getMessage()}}</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"cityName\\\" id=\\\"cityName\\\" aria-describedby=\\\"helpId\\\" placeholder=\\\"Enter city name\\\"\\n          [(ngModel)]=\\\"txtcityName\\\" />\\n        <small id=\\\"helpId\\\" class=\\\"form-text text-muted\\\">Help text</small>\\n      </div>\\n      <button (click)=\\\"getWeather()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Get now</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { WeatherService } from './weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers:[WeatherService]\n})\nexport class WeatherComponent implements OnInit {\n   temp:number;\n  cityName:string=\"\";\n  txtcityName:string;\n  isLoading:boolean=false;\n  constructor(private weatherService:WeatherService) { }\n\n  ngOnInit() {\n  }\n  getWeather(){\n    this.isLoading=true;\n    this.weatherService.getTemprature(this.txtcityName).then(data=>{\n      this.cityName=this.txtcityName;\n      this.temp=data;\n      this.isLoading=false;\n    }\n    ).catch(err=>{\n      alert(\"Cannot find city!\");\n      this.isLoading=false;\n      this.cityName='';\n      this.txtcityName='';\n    });\n    \n  }\n  getMessage():string{\n    if (this.isLoading) {\n      return 'Loading...';\n    }\n    return this.cityName===''?'Enter city name':(this.cityName +' is now '+this.temp);\n  }\n}\n","import{Injectable} from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n@Injectable()\r\nexport class WeatherService{\r\n    constructor(private http:Http){\r\n        \r\n    }\r\n    getTemprature(cityName:string){\r\n        const url=\"https://api.openweathermap.org/data/2.5/weather?appid=fce95bdbd820ccf29a68b9574b50fe50&units=metric&q=\"+cityName;\r\n        return this.http.get(url).toPromise().then(res=>res.json()).then(JsonRes=>JsonRes.main.temp);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}